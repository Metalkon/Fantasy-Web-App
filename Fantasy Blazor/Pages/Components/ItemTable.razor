@using Fantasy_Web_API.Models
@page "/ItemTable"

@if (loading)
{
    <img src="./images/KnightRun.gif" alt="Image" style="display: block; margin: 0 auto;"/>
    <p style="text-align:center;">Loading Item Table...</p>
}
else if (error)
{
    <p style="text-align:center;">Error: @errorMessage</p>
}
else
{    
    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Rarity</th>
                <th>Price</th>
                <th>Description</th>
                <th style="width: 1%">Actions</th>
            </tr>
        </thead>  
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td style="width: 1%;">
                        @if (!string.IsNullOrEmpty(item.Image))
                        {
                            <img src="@item.Image">
                        }
                        else
                        {
                            <img src="~/image/icon/question_mark.jpg" alt="Question Mark" />
                        }                    
                    </td>
                    <td style="width: 15%; vertical-align: middle;">@item.Name</td>
                    <td style="width: 15%; vertical-align: middle;">@item.Rarity</td>
                    <td style="width: 15%; vertical-align: middle;">@item.Price</td>
                    <td style="vertical-align: middle;">@item.Description</td>
                    <td style="width: 1%; vertical-align: middle;">
                        <div class="text-center d-inline-flex">
                            <!-- Edit Button -->
                            <button class="btn btn-primary rounded" @onclick="@(() => EditItem(item.Id))" style="margin-right: 5px">Edit</button>
                            <!-- Delete Button -->
                            <button class="btn btn-danger rounded" @onclick="@(() => DeleteItem(item.Id))">Delete</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- NOTE: Add Full CRUD Capabilits & Pagination-->

@code {
    private bool loading = true;
    private bool error = false;
    private string errorMessage = "";
    private List<ItemDTO> items = new List<ItemDTO>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = new HttpClient();
            items = await client.GetFromJsonAsync<List<ItemDTO>>("https://localhost:7000/api/Items");
            loading = false;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            error = true;
            loading = false;
        }
    }
    private async Task EditItem(int itemId)
    {
        // TODO: Implement edit logic
    }
    private async Task DeleteItem(int itemId)
    {
        // TODO: Implement delete logic
    }

}
