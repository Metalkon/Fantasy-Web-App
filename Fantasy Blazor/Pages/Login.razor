@page "/Login"
@inject HttpClient client
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage

<AuthorizeView>
    <Authorized>
        <!-- Content for authorized users -->
        <p>You are already logged in.</p>
    </Authorized>
    <NotAuthorized>
        <h3>Login</h3>
        <div style="display: flex; flex-direction: column; margin-bottom: 10px;">
            <label style="margin-bottom: 5px; font-weight: bold;">Email:</label>
            <input type="text" style="width: 50%;" @bind-value="user.Email" />
        </div>
        else
        {
            <button class="btn btn-primary" @onclick="@(() => SendEmail(user))">Login</button>
        }
        <div style="margin-bottom: 10px;">
            <span style="color: red; font-size: 12px;">@message</span>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    UserLogin user = new UserLogin();
    private string message = string.Empty;
    private bool sentCode = false;

    async Task SendEmail(UserLogin user)
    {
        if (string.IsNullOrEmpty(user.Email))
        {
            message = "Please fill out the required email field";
        }
        else
        {
            var result = await client.PostAsJsonAsync($"https://localhost:7000/user/login", user);
            if (result.IsSuccessStatusCode)
            {
                sentCode = true;
                message = await result.Content.ReadAsStringAsync();
            }
            else
            {
                string error = await result.Content.ReadAsStringAsync();
                message = $"ERROR: {error}";
            }
        }
    }
}